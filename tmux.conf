# zsh is kinda tight

# copy and paster
#set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-command "fish"

# look good
#set -g default-terminal "screen-256color"
#set-option -g default-shell $SHELL
set-option -g default-terminal "xterm-256color"

# Same PWD for new windows
bind c new-window -c "#{pane_current_path}"

# act like GNU screen (and C-j as an easier to hit option)
unbind C-b
set-option -g prefix C-Space
bind Space send-prefix

# Bind <Space> to enter copy mode.
bind Space copy-mode
bind C-Space copy-mode

# Use y and reattach-to-user-namespace (on OSX) (brew install reattach-to-user-namespace)
bind-key -t vi-copy y \
  copy-pipe "reattach-to-user-namespace pbcopy"

# set the terminal emulator's title to the current tab's title:
set -g set-titles on

# a mouse (this seems to break copy paste)
#set -g mode-mouse on
#setw -g mouse-select-window on
#setw -g mouse-select-pane on

# Number windows and panes starting at 1 so that we can jump to them easier.
set -g base-index 1
set -g pane-base-index 1

# act like vim
#setw -g mode-keys vi
set -g mode-keys vi
set -g status-keys vi

set-option -g history-limit 100000
#supposedly fixes pausing in vim
set-option -sg escape-time 1

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Setting up copy-paste for mac:
bind -t vi-copy v begin-selection

# after copying to a tmux buffer, hit y again to copy to clipboard
#bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# THEME
set -g status-bg default
set -g status-fg colour245
set -g status-justify left
set -g status-left ' [#[fg=blue]workspace:#[fg=red]#S#[default]] '
set -g status-left-length 30
set -g status-right ''
set -g window-status-format "#[fg=blue]#I:#[fg=red]#W#F#[default]"
set -g window-status-current-format "#[fg=white,bg=red,nobold] #I:#W#F #[default]"
